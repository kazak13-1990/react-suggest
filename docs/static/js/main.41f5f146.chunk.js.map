{"version":3,"sources":["utils/miscUtils.js","components/SuggestInput/SuggestInput.js","services/api/SearchAPI.js","services/SearchService.js","components/SuggestInput/SuggestItems/DefaultSuggestItem.js","components/SearchWithSuggest.js","components/SuggestInput/SuggestItems/SuggestItemWithDescr.js","App.js","serviceWorker.js","index.js"],"names":["noop","DEFAULT_ITEM_INDEX","handleKeys","keyUp","keyDown","enter","esc","SuggestInput","state","inputValue","activeItemIndex","showResults","onChange","event","onSearch","_this","props","value","target","setState","selectSuggestItem","newActiveItem","suggestResults","length","maxActiveItemIndex","onKeyPress","_this$state","keyCode","which","preventDefault","onSelectSuggest","onBlur","suggestIndex","_this$props","onAction","newInputValue","title","_this2","this","_this$props2","SuggestItem","className","_this$state2","displayValue","react_default","a","createElement","react_outside_click_handler_default","onOutsideClick","concat","type","placeholder","onKeyDown","map","suggestItem","index","push","key","join","onClick","React","PureComponent","defaultProps","searcher","FuzzySearch","DATA","data","sort","emulateRequest","val","count","Promise","resolve","setTimeout","searchResult","search","splice","_callee","regenerator_default","wrap","_context","prev","next","abrupt","sent","stop","SearchAPI","cache","cachedResult","_args","arguments","undefined","slice","SearchService","DefaultSuggestItem","_ref","SearchWithSuggest","searchResults","searchCount","maxSuggestCount","SuggestInput_SuggestInput","Component","SuggestItemWithDescr","descr","substr","App","SearchWithSuggest_SearchWithSuggest","result","alert","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.41f5f146.chunk.js","sourcesContent":["export const noop = () => {};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\nimport {noop} from \"../../utils/miscUtils\";\r\nimport './suggest-input.css';\r\n\r\n\r\nconst DEFAULT_ITEM_INDEX = -1;\r\nconst handleKeys = {\r\n    keyUp: 38,\r\n    keyDown: 40,\r\n    enter: 13,\r\n    esc: 27,\r\n};\r\n\r\nexport default class SuggestInput extends React.PureComponent {\r\n    static propTypes = {\r\n        suggestResults: PropTypes.array.isRequired,\r\n        SuggestItem: PropTypes.oneOfType([\r\n            PropTypes.func,\r\n            PropTypes.node,\r\n        ]).isRequired,\r\n        onAction: PropTypes.func,\r\n    };\r\n\r\n    static defaultProps = {\r\n        onAction: noop,\r\n    };\r\n\r\n    state = {\r\n        inputValue: '',\r\n        activeItemIndex: DEFAULT_ITEM_INDEX,\r\n        showResults: true,\r\n    };\r\n\r\n    onChange = (event) => {\r\n        const {onSearch} = this.props;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            inputValue: value,\r\n            activeItemIndex: DEFAULT_ITEM_INDEX,\r\n            showResults: true,\r\n        });\r\n\r\n        onSearch(value);\r\n    };\r\n\r\n    selectSuggestItem = (newActiveItem) => {\r\n        const {suggestResults} = this.props;\r\n        if (suggestResults.length > 0) {\r\n            const maxActiveItemIndex = suggestResults.length - 1;\r\n            if (newActiveItem > maxActiveItemIndex) {\r\n                newActiveItem = DEFAULT_ITEM_INDEX;\r\n            }\r\n            if (newActiveItem < -1) {\r\n                newActiveItem = maxActiveItemIndex;\r\n            }\r\n            this.setState({\r\n                activeItemIndex: newActiveItem,\r\n            });\r\n        }\r\n    };\r\n\r\n    onKeyPress = (event) => {\r\n        const {activeItemIndex, showResults} = this.state;\r\n        const keyCode = event.keyCode || event.which;\r\n\r\n        if (keyCode === handleKeys.keyDown) {\r\n            event.preventDefault();\r\n            if (showResults){\r\n                this.selectSuggestItem(activeItemIndex + 1);\r\n            } else {\r\n                this.setState({\r\n                    showResults: true,\r\n                })\r\n            }\r\n        }\r\n        if (keyCode === handleKeys.keyUp) {\r\n            event.preventDefault();\r\n            if (showResults){\r\n                this.selectSuggestItem(activeItemIndex - 1);\r\n            } else {\r\n                this.setState({\r\n                    showResults: true,\r\n                })\r\n            }\r\n        }\r\n        if (keyCode === handleKeys.enter) {\r\n            event.preventDefault();\r\n            this.onSelectSuggest(activeItemIndex);\r\n        }\r\n        if (keyCode === handleKeys.esc) {\r\n            event.preventDefault();\r\n            this.onBlur();\r\n        }\r\n    };\r\n\r\n    onSelectSuggest = (suggestIndex) => {\r\n        const {onAction, suggestResults} = this.props;\r\n        const {inputValue} = this.state;\r\n        const suggestValue = suggestResults[suggestIndex] && suggestResults[suggestIndex].title;\r\n        const newInputValue = suggestValue || inputValue;\r\n        this.setState({\r\n            inputValue: newInputValue,\r\n            activeItemIndex: DEFAULT_ITEM_INDEX,\r\n        });\r\n\r\n        onAction(newInputValue);\r\n    };\r\n\r\n    onBlur = () => {\r\n        this.setState({\r\n            showResults: false,\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const { SuggestItem, suggestResults, className } = this.props;\r\n        const { inputValue, showResults, activeItemIndex } = this.state;\r\n\r\n        const suggestValue = suggestResults[activeItemIndex] && suggestResults[activeItemIndex].title;\r\n        const displayValue = suggestValue || inputValue;\r\n\r\n        return (\r\n            <OutsideClickHandler\r\n                onOutsideClick={this.onBlur}\r\n            >\r\n                <div className={`suggest-input ${className}`}>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={displayValue}\r\n                        className=\"input\"\r\n                        placeholder=\"Start typing...\"\r\n                        onChange={this.onChange}\r\n                        onKeyDown={this.onKeyPress}\r\n                    />\r\n                    {(suggestResults.length > 0) && showResults &&\r\n                        <ul\r\n                            className=\"suggest-block\"\r\n                        >\r\n                            {suggestResults.map((suggestItem, index) => {\r\n                                const isActive = activeItemIndex === index;\r\n                                const className = ['suggest-item'];\r\n                                isActive && className.push('isActive');\r\n                                return (\r\n                                    <SuggestItem\r\n                                        key={index}\r\n                                        className={className.join(' ')}\r\n                                        suggestItem={suggestItem}\r\n                                        onClick={() => this.onSelectSuggest(index)}\r\n                                    />\r\n                                )\r\n                            })}\r\n                        </ul>\r\n                    }\r\n                </div>\r\n            </OutsideClickHandler>\r\n        );\r\n    }\r\n}\r\n","import DATA from './DATA';\r\nimport FuzzySearch from \"fuzzy-search\";\r\n\r\n\r\nconst REQUEST_DELAY = 200;\r\nconst searcher = new FuzzySearch(DATA.data, ['title'], {sort: true});\r\n\r\nconst emulateRequest = (val, count) => {\r\n    return new Promise(resolve => {\r\n        setTimeout(() => {\r\n            let searchResult = [];\r\n            if (val) {\r\n                searchResult = searcher.search(val);\r\n            }\r\n            resolve(searchResult.splice(0, count));\r\n        }, REQUEST_DELAY);\r\n    });\r\n};\r\n\r\nasync function search(val, count) {\r\n    return await emulateRequest(val, count);\r\n}\r\n\r\nconst SearchAPI = {\r\n    search: search,\r\n};\r\n\r\nexport default SearchAPI;","import SearchAPI from \"./api/SearchAPI\";\r\n\r\n\r\nconst cache = {};\r\n\r\nasync function search(val, count = 10) {\r\n    let searchResult;\r\n    const cachedResult = cache[val];\r\n    if (cachedResult && (cachedResult.count >= count)) {\r\n        searchResult = cachedResult.data.slice().splice(0, count);\r\n    } else {\r\n        searchResult = await SearchAPI.search(val, count);\r\n        cache[val] = {\r\n            count: count,\r\n            data: searchResult,\r\n        };\r\n    }\r\n\r\n    return searchResult;\r\n}\r\n\r\nconst SearchService = {\r\n    search: search,\r\n};\r\n\r\nexport default SearchService;","import React from 'react';\r\n\r\n\r\nconst DefaultSuggestItem = ({suggestItem, className, onClick}) => {\r\n    return (\r\n        <li\r\n            className={className}\r\n            onClick={onClick}\r\n        >\r\n            {suggestItem.title}\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default DefaultSuggestItem;\r\n","import React from 'react';\r\nimport SuggestInput from \"./SuggestInput/SuggestInput\";\r\nimport SearchService from \"../services/SearchService\";\r\nimport PropTypes from \"prop-types\";\r\nimport DefaultSuggestItem from \"./SuggestInput/SuggestItems/DefaultSuggestItem\";\r\nimport {noop} from \"../utils/miscUtils\";\r\n\r\n\r\nconst DEFAULT_MAX_SUGGEST_COUNT = 10;\r\n\r\nexport default class SearchWithSuggest extends React.Component{\r\n    static propTypes = {\r\n        className: PropTypes.string,\r\n        maxSuggestCount: PropTypes.number,\r\n        SuggestItem: PropTypes.oneOfType([\r\n            PropTypes.func,\r\n            PropTypes.node,\r\n        ]),\r\n        onAction: PropTypes.func,\r\n    };\r\n\r\n    static defaultProps = {\r\n        maxSuggestCount: DEFAULT_MAX_SUGGEST_COUNT,\r\n        SuggestItem: DefaultSuggestItem,\r\n        onAction: noop,\r\n    };\r\n\r\n    state = {\r\n        searchResults: [],\r\n    };\r\n\r\n    searchCount = 0;\r\n\r\n    onSearch = async (value) => {\r\n        const {maxSuggestCount} = this.props;\r\n        const searchCount = ++this.searchCount;\r\n        let searchResults = [];\r\n\r\n        if (value !== '') {\r\n            searchResults = await SearchService.search(value, maxSuggestCount);\r\n        }\r\n        if (searchCount === this.searchCount) {\r\n            this.setState({\r\n                searchResults: searchResults,\r\n            });\r\n        }\r\n    };\r\n\r\n    onAction = (value) => {\r\n        const {onAction} = this.props;\r\n        this.setState({\r\n            searchResults: [],\r\n        });\r\n        onAction(value);\r\n    };\r\n\r\n    render() {\r\n        const {SuggestItem, className} = this.props;\r\n        const {searchResults} = this.state;\r\n        return (\r\n            <SuggestInput\r\n                className={className}\r\n                suggestResults={searchResults}\r\n                SuggestItem={SuggestItem}\r\n                onSearch={this.onSearch}\r\n                onAction={this.onAction}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\n\r\nconst SuggestItemWithDescr = ({suggestItem, className, onClick}) => {\r\n    return (\r\n        <li\r\n            className={className}\r\n            onClick={onClick}\r\n        >\r\n            <div>\r\n                <h3>{suggestItem.title}</h3>\r\n                <p>{suggestItem.descr.substr(0, 100)}...</p>\r\n            </div>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default SuggestItemWithDescr;\r\n","import React, { Component } from 'react';\r\nimport SearchWithSuggest from \"./components/SearchWithSuggest\"\r\nimport SuggestItemWithDescr from \"./components/SuggestInput/SuggestItems/SuggestItemWithDescr\";\r\nimport \"./App.css\";\r\n\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <h2>Default suggest</h2>\r\n                <SearchWithSuggest\r\n                    className=\"search-first\"\r\n                    onAction={(result) => alert('Search: ' + result)}\r\n                />\r\n                <div>\r\n                    <p>Some content after suggest input</p>\r\n                </div>\r\n                <hr/>\r\n                <h2>Suggest with descriptions</h2>\r\n                <SearchWithSuggest\r\n                    className=\"search-second\"\r\n                    SuggestItem={SuggestItemWithDescr}\r\n                    maxSuggestCount={5}\r\n                    onAction={(result) => alert('Search: ' + result)}\r\n                />\r\n                <div>\r\n                    <p>Some content after suggest input</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}