{"version":3,"sources":["components/SuggestItem.js","services/api/SearchAPI.js","services/SearchService.js","components/SuggestInput/SuggestInput.js","App.js","serviceWorker.js","index.js"],"names":["SuggestItem","_ref","suggestItem","className","onClick","react_default","a","createElement","title","searcher","FuzzySearch","DATA","data","sort","emulateRequest","val","count","Promise","resolve","setTimeout","searchResult","search","splice","_callee","regenerator_default","wrap","_context","prev","next","abrupt","sent","stop","this","SearchAPI","cache","cachedResult","_args","arguments","length","undefined","slice","SearchService","DEFAULT_ITEM_INDEX","handleKeys","keyUp","keyDown","enter","SuggestInput","state","inputValue","suggestResults","activeItemIndex","onChange","event","maxSuggestCount","value","_this","props","target","setState","selectSuggestItem","newActiveItem","maxActiveItemIndex","onKeyPress","keyCode","which","preventDefault","onSelectSuggest","suggestIndex","finished","onAction","_this$state","newInputValue","onBlur","_this2","_this$state2","displayValue","react_outside_click_handler_default","onOutsideClick","type","placeholder","onKeyDown","map","index","push","key","join","React","Component","defaultProps","App","SuggestInput_SuggestInput","result","alert","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39d1bd75.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst SuggestItem = ({suggestItem, className, onClick}) => {\r\n    return (\r\n        <li\r\n            className={className}\r\n            onClick={onClick}\r\n        >\r\n            {suggestItem.title}\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default SuggestItem;\r\n","import DATA from '../../DATA';\r\nimport FuzzySearch from \"fuzzy-search\";\r\n\r\n\r\nconst REQUEST_DELAY = 800;\r\nconst searcher = new FuzzySearch(DATA.data, ['title'], {sort: true});\r\n\r\nconst emulateRequest = (val, count) => {\r\n    return new Promise(resolve => {\r\n        setTimeout(() => {\r\n            let searchResult = [];\r\n            if (val) {\r\n                searchResult = searcher.search(val);\r\n            }\r\n            resolve(searchResult.splice(0, count));\r\n        }, REQUEST_DELAY);\r\n    });\r\n};\r\n\r\nasync function search(val, count) {\r\n    return await emulateRequest(val, count);\r\n}\r\n\r\nconst SearchAPI = {\r\n    search: search,\r\n};\r\n\r\nexport default SearchAPI;","import SearchAPI from \"./api/SearchAPI\";\r\n\r\n\r\nconst cache = {};\r\n\r\nasync function search(val, count = 10) {\r\n    let searchResult;\r\n    const cachedResult = cache[val];\r\n    if (cachedResult && (cachedResult.count >= count)) {\r\n        searchResult = cachedResult.data.slice().splice(0, count);\r\n    } else {\r\n        searchResult = await SearchAPI.search(val, count);\r\n        cache[val] = {\r\n            count: count,\r\n            data: searchResult,\r\n        };\r\n    }\r\n\r\n    return searchResult;\r\n}\r\n\r\nconst SearchService = {\r\n    search: search,\r\n};\r\n\r\nexport default SearchService;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\nimport SuggestItem from \"../SuggestItem\";\r\nimport SearchService from \"../../services/SearchService\";\r\nimport './suggest-input.css';\r\n\r\n\r\nconst MAX_SUGGEST_COUNT = 10;\r\nconst DEFAULT_ITEM_INDEX = -1;\r\nconst handleKeys = {\r\n    keyUp: 38,\r\n    keyDown: 40,\r\n    enter: 13,\r\n};\r\n\r\nexport default class SuggestInput extends React.Component {\r\n    static propTypes = {\r\n        maxSuggestCount: PropTypes.number,\r\n        onAction: PropTypes.func,\r\n    };\r\n\r\n    static defaultProps = {\r\n        SuggestItem: SuggestItem,\r\n        maxSuggestCount: MAX_SUGGEST_COUNT,\r\n    };\r\n\r\n    state = {\r\n        inputValue: '',\r\n        suggestResults: [],\r\n        activeItemIndex: DEFAULT_ITEM_INDEX,\r\n    };\r\n\r\n    onChange = async (event) => {\r\n        const {maxSuggestCount} = this.props;\r\n        const value = event.target.value;\r\n        this.setState({\r\n            inputValue: value,\r\n            activeItemIndex: DEFAULT_ITEM_INDEX,\r\n        });\r\n\r\n        if (value !== '') {\r\n            const suggestResults = await SearchService.search(value, maxSuggestCount);\r\n            this.setState({\r\n                suggestResults: suggestResults,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                suggestResults: [],\r\n            });\r\n        }\r\n    };\r\n\r\n    selectSuggestItem = (newActiveItem) => {\r\n        const {suggestResults} = this.state;\r\n        if (suggestResults.length > 0) {\r\n            const maxActiveItemIndex = suggestResults.length - 1;\r\n            if (newActiveItem > maxActiveItemIndex) {\r\n                newActiveItem = DEFAULT_ITEM_INDEX;\r\n            }\r\n            if (newActiveItem < -1) {\r\n                newActiveItem = maxActiveItemIndex;\r\n            }\r\n            this.setState({\r\n                activeItemIndex: newActiveItem,\r\n            });\r\n        }\r\n    };\r\n\r\n    onKeyPress = (event) => {\r\n        const {activeItemIndex} = this.state;\r\n        const keyCode = event.keyCode || event.which;\r\n\r\n        if (keyCode === handleKeys.keyDown) {\r\n            event.preventDefault();\r\n            this.selectSuggestItem(activeItemIndex + 1);\r\n        }\r\n        if (keyCode === handleKeys.keyUp) {\r\n            event.preventDefault();\r\n            this.selectSuggestItem(activeItemIndex - 1);\r\n        }\r\n        if (keyCode === handleKeys.enter) {\r\n            event.preventDefault();\r\n            this.onSelectSuggest(activeItemIndex);\r\n        }\r\n    };\r\n\r\n    onSelectSuggest = (suggestIndex, finished = true) => {\r\n        const {onAction} = this.props;\r\n        const {inputValue, suggestResults} = this.state;\r\n        const suggestValue = suggestResults[suggestIndex] && suggestResults[suggestIndex].title;\r\n        const newInputValue = suggestValue || inputValue;\r\n        this.setState({\r\n            inputValue: newInputValue,\r\n            activeItemIndex: DEFAULT_ITEM_INDEX,\r\n            suggestResults: [],\r\n        });\r\n\r\n        if (finished) {\r\n            onAction && onAction(newInputValue);\r\n        }\r\n    };\r\n\r\n    onBlur = (event) => {\r\n        const {activeItemIndex} = this.state;\r\n        this.onSelectSuggest(activeItemIndex, false);\r\n    };\r\n\r\n    render() {\r\n        const {SuggestItem} = this.props;\r\n        const { inputValue, suggestResults, activeItemIndex } = this.state;\r\n\r\n        const suggestValue = suggestResults[activeItemIndex] && suggestResults[activeItemIndex].title;\r\n        const displayValue = suggestValue || inputValue;\r\n\r\n        return (\r\n            <OutsideClickHandler\r\n                onOutsideClick={this.onBlur}\r\n            >\r\n                <div className=\"suggest-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={displayValue}\r\n                        className=\"input\"\r\n                        placeholder=\"Start typing...\"\r\n                        onChange={this.onChange}\r\n                        onKeyDown={this.onKeyPress}\r\n                    />\r\n                    {(suggestResults.length > 0) &&\r\n                    <ul\r\n                        className=\"suggest-block\"\r\n                    >\r\n                        {suggestResults.map((suggestItem, index) => {\r\n                            const isActive = activeItemIndex === index;\r\n                            const className = ['suggest-item'];\r\n                            isActive && className.push('isActive');\r\n                            return (\r\n                                <SuggestItem\r\n                                    key={index}\r\n                                    className={className.join(' ')}\r\n                                    suggestItem={suggestItem}\r\n                                    onClick={() => this.onSelectSuggest(index)}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                    }\r\n                </div>\r\n            </OutsideClickHandler>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport SuggestInput from './components/SuggestInput/SuggestInput';\r\nimport \"./App.css\";\r\n\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <SuggestInput\r\n                    maxSuggestCount={7}\r\n                    onAction={(result) => alert('Действие с результатом: ' + result)}\r\n                />\r\n                <div>\r\n                    <p>Some content after suggest input</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}